name: Deploy

on:
  workflow_call:
    inputs:
      app-name:
        required: true
        type: string
      version:
        required: false
        type: string
        default: "1.0"
      extra-args:
        required: true
        type: string
    secrets:
      host:
        required: true
      username:
        required: true
      key:
        required: true
      passphrase:
        required: true
      vars:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Download application jar
        uses: actions/download-artifact@v4
        with:
          name: application

      - name: Stop application if running & check version
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.host }}
          username: ${{ secrets.username }}
          key: ${{ secrets.key }}
          passphrase: ${{ secrets.passphrase }}
          script: | 
            if [ "${{ inputs.version }}" != "$(./deploy.sh -v)" ]; then
              echo deploy script version mismatch!
            fi

            ./deploy.sh -n ${{ inputs.app-name }} -a stop
            rm -rf apps/${{ inputs.app-name }}

      - name: Copy project files
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.host }}
          username: ${{ secrets.username }}
          key: ${{ secrets.key }}
          passphrase: ${{ secrets.passphrase }}
          source: "${{ inputs.app-name }}.jar"
          target: "apps/${{ inputs.app-name }}"

      - name: Run project
        uses: appleboy/ssh-action@v1.2.0
        env:
          VARS: ${{ secrets.vars }}
        with:
          host: ${{ secrets.host }}
          username: ${{ secrets.username }}
          key: ${{ secrets.key }}
          passphrase: ${{ secrets.passphrase }}
          envs: VARS
          script: |
            for var_block in ${VARS}; do
              if [[ "$var_block" =~ ^[A-Za-z].+=.+$ ]]; then
                declare -x "${var_block%%=*}=${var_block#*=}"
              fi
            done
            chown "$(whoami)" "apps/${{ inputs.app-name }}/${{ inputs.app-name }}.jar"
            ./deploy.sh -n "${{ inputs.app-name }}" -a start -e "${{ inputs.extra-args }}"