name: Deploy

on:
  workflow_call:
    inputs:
      app-name:
        required: true
        type: string
    secrets:
      host:
        required: true
      username:
        required: true
      key:
        required: true
      passphrase:
        required: true
      vars:
        required: true
      

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # - name: Download application jar
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: application

      # - name: Stop project if running
      #   uses: appleboy/ssh-action@v1.2.0
      #   with:
      #     host: ${{ secrets.host }}
      #     username: ${{ secrets.username }}
      #     key: ${{ secrets.key }}
      #     passphrase: ${{ secrets.passphrase }}
      #     script: |
      #       ./deploy.sh -n ${{ inputs.app-name }} -a stop
      #       rm -rf apps/${{ inputs.app-name }}

      # - name: Copy project files
      #   uses: appleboy/scp-action@v0.1.7
      #   with:
      #     host: ${{ secrets.host }}
      #     username: ${{ secrets.username }}
      #     key: ${{ secrets.key }}
      #     passphrase: ${{ secrets.passphrase }}
      #     source: "${{ inputs.app-name }}.jar"
      #     target: "$HOME/apps/${{ inputs.app-name }}"
      
      - name: Parse secrets
        run: |
          var_names=

          for var_block in ${vars}; do
            if [[ "$var_block" =~ ^[A-Za-z].+=.+$ ]]; then

              echo "$var_block" >> "$GITHUB_ENV" 
              echo "$var_block"
              var_names+="${var_block%%=*},"
            fi
          done

          echo "var_names=${var_names%,*}" >> "$GITHUB_ENV"

          echo "test: ${var_names}"
          echo "testx: ${ZEPTOMAIL_API_PASSWORD}"

        env:
          vars: ${{ secrets.vars }}

      # - name: Run project
      #   uses: appleboy/ssh-action@v1.2.0
      #   with:
      #     host: ${{ secrets.host }}
      #     username: ${{ secrets.username }}
      #     key: ${{ secrets.key }}
      #     passphrase: ${{ secrets.passphrase }}
      #     envs: "$var_names"
      #     script: |
      #       ./deploy.sh -n ${{ inputs.app-name }} -a start